{"dependencies":[{"name":"C:\\Users\\WeBuy\\Desktop\\Projects\\AH_projects\\package.json","includedInParent":true,"mtime":1527802209488},{"name":"C:\\Users\\WeBuy\\Desktop\\Projects\\AH_projects\\.babelrc","includedInParent":true,"mtime":1527796368259},{"name":"C:\\Users\\WeBuy\\Desktop\\Projects\\AH_projects\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1527772631949},{"name":"./$.ctx","loc":{"line":2,"column":26}},{"name":"./$.export","loc":{"line":3,"column":26}},{"name":"./$.to-object","loc":{"line":4,"column":26}},{"name":"./$.iter-call","loc":{"line":5,"column":26}},{"name":"./$.is-array-iter","loc":{"line":6,"column":26}},{"name":"./$.to-length","loc":{"line":7,"column":26}},{"name":"./core.get-iterator-method","loc":{"line":8,"column":26}},{"name":"./$.iter-detect","loc":{"line":9,"column":41}}],"generated":{"js":"'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","map":{"mappings":[{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\core-js\\modules\\es6.array.from.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules\\core-js\\modules\\es6.array.from.js":"'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n"},"lineCount":37}},"hash":"9e9f38259ac68f0269e4ceab116ba20f","cacheData":{"env":{}}}